{"version":3,"sources":["hooks/useScriptRef.js","ui-component/extended/AnimateButton.js","utils/password-strength.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","ui-component/cards/AuthFooter.js","assets/images/icons/social-google.svg","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","strengthColor","count","label","color","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthFooter","justifyContent","variant","component","Link","href","target","underline","FirebaseRegister","others","useTheme","scriptedRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","useState","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","a","console","error","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","Grid","container","spacing","item","Button","fullWidth","onClick","size","grey","borderColor","Box","mr","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","name","defaultValue","typography","customInput","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","fontSize","FormControlLabel","control","Checkbox","to","mt","disableElevation","Register","Logo","Stack","secondary","main","gutterBottom","textAlign","AuthRegister","textDecoration"],"mappings":"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","file":"static/js/11.20ff93a5.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","/**\r\n * Password validator for login pages\r\n */\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return { label: 'Poor', color: value.errorMain };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            rescue42-emergency-hotline.com\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\r\n            &copy; 2022\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport Google from 'assets/images/icons/social-google.svg';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [strength, setStrength] = useState(0);\r\n    const [level, setLevel] = useState();\r\n\r\n    const googleHandler = async () => {\r\n        console.error('Register');\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.grey[50],\r\n                                borderColor: theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign up with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box sx={{ alignItems: 'center', display: 'flex' }}>\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor: `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"First Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"fname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Last Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"lname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                style={{ backgroundColor: level?.color }}\r\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level?.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign up\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthRegister from '../auth-forms/AuthRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign up\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/pages/login/login3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Already have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}