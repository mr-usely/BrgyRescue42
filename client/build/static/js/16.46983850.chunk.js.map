{"version":3,"sources":["ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/chart-data/total-order-month-line-chart.js","views/dashboard/Default/chart-data/total-order-year-line-chart.js","views/dashboard/Default/TotalOrderLineChartCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js"],"names":["EarningCard","Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","styled","MainCard","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","isLoading","useTheme","useState","anchorEl","setAnchorEl","totalUser","useSelector","state","user","handleClose","border","Box","p","Avatar","typography","commonAvatar","largeAvatar","mt","src","EarningIcon","alt","mediumAvatar","zIndex","onClick","event","currentTarget","fontSize","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","mr","alignItems","Typography","fontWeight","mb","undefined","totalU","cursor","smallAvatar","transform","PopularCard","spacing","gridSpacing","xs","zeroMinWidth","display","pt","loadbrgys","load","ui","loading","setOpen","brgys","forEach","i","style","maxHeight","alignContent","primary","sm","filter","idx","map","brgy","numberofreport","success","light","ml","contactnumber","Divider","CardActions","Button","size","disableElevation","Dialog","scroll","maxWidth","fullWidth","DialogTitle","align","DialogContent","dividers","DialogContentText","tabIndex","chartData","type","options","chart","sparkline","enabled","dataLabels","colors","fill","stroke","curve","yaxis","min","max","tooltip","fixed","x","show","y","title","marker","series","name","data","TotalOrderLineChartCard","totalEmergency","timeValue","setTimeValue","handleChangeTime","newValue","e","totalE","ChartDataMonth","ChartDataYear","TotalIncomeCard","List","py","ListItem","disableGutters","ListItemAvatar","ListItemText","TotalIncomeDarkCard","Date","date","setDate","refreshClock","useEffect","timerId","setInterval","clearInterval","toLocaleTimeString","warning","TotalIncomeLightCard","toLocaleDateString","grey","TotalGrowthBarChart","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","grid","status","value","label","setValue","customization","navType","text","darkLight","grey200","grey500","primary200","primaryDark","secondaryMain","main","secondaryLight","newChartData","borderColor","ApexCharts","exec","TextField","select","onChange","target","option","Dashboard","setLoading","lg","md"],"mappings":"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","file":"static/js/16.46983850.chunk.js","sourcesContent":["// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// ==============================|| SKELETON - EARNING CARD ||============================== //\r\n\r\nconst EarningCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" height={30} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default EarningCard;\r\n","export default __webpack_public_path__ + \"static/media/earning.00f461a5.svg\";","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\n// assets\r\nimport EarningIcon from 'assets/images/icons/earning.svg';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst EarningCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const totalUser = useSelector((state) => state.user);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonEarningCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.secondary[800],\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <img src={EarningIcon} alt=\"Notification\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.mediumAvatar,\r\n                                                backgroundColor: theme.palette.secondary.dark,\r\n                                                color: theme.palette.secondary[200],\r\n                                                zIndex: 1\r\n                                            }}\r\n                                            aria-controls=\"menu-earning-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            <MoreHorizIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                        <Menu\r\n                                            id=\"menu-earning-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <GetAppTwoToneIcon sx={{ mr: 1.75 }} /> Import Card\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <FileCopyTwoToneIcon sx={{ mr: 1.75 }} /> Copy Data\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <PictureAsPdfTwoToneIcon sx={{ mr: 1.75 }} /> Export\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <ArchiveTwoToneIcon sx={{ mr: 1.75 }} /> Archive File\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            {totalUser.totalU == undefined ? '0' : totalUser.totalU}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.secondary[200],\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.secondary[200]\r\n                                    }}\r\n                                >\r\n                                    Total Users\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nEarningCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default EarningCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={150} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\r\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    CardActions,\r\n    CardContent,\r\n    Divider,\r\n    Grid,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle\r\n} from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const loadbrgys = useSelector((state) => state.user);\r\n    const load = useSelector((state) => state.ui.loading);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClickClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    loadbrgys.brgys.forEach((item, i) => {\r\n        item.id = i + 1;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing} style={{ maxHeight: '100%', overflow: 'auto' }}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Top Emergency Brgy's</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <MoreHorizOutlinedIcon\r\n                                            fontSize=\"small\"\r\n                                            sx={{\r\n                                                color: theme.palette.primary[200],\r\n                                                cursor: 'pointer'\r\n                                            }}\r\n                                            aria-controls=\"menu-popular-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        />\r\n                                        <Menu\r\n                                            id=\"menu-popular-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\r\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\r\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                {load.loading ? (\r\n                                    \"Loading Brgy's\"\r\n                                ) : (\r\n                                    <>\r\n                                        {loadbrgys.brgys\r\n                                            .filter((item, idx) => idx < 7)\r\n                                            .map((item) => (\r\n                                                <div key={item.id}>\r\n                                                    <Grid container direction=\"column\">\r\n                                                        <Grid item>\r\n                                                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                                <Grid item>\r\n                                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                                        {item.brgy}\r\n                                                                    </Typography>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                                        <Grid item>\r\n                                                                            <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                                                {item.numberofreport}\r\n                                                                            </Typography>\r\n                                                                        </Grid>\r\n                                                                        <Grid item>\r\n                                                                            <Avatar\r\n                                                                                variant=\"rounded\"\r\n                                                                                sx={{\r\n                                                                                    width: 16,\r\n                                                                                    height: 16,\r\n                                                                                    borderRadius: '5px',\r\n                                                                                    backgroundColor: theme.palette.success.light,\r\n                                                                                    color: theme.palette.success.dark,\r\n                                                                                    ml: 2\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <LocalHospitalIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                                            </Avatar>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Typography variant=\"subtitle2\" sx={{ color: 'success.dark' }}>\r\n                                                                {item.contactnumber}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Divider sx={{ my: 1.5 }} />\r\n                                                </div>\r\n                                            ))}\r\n                                    </>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\r\n                        <Button size=\"small\" disableElevation onClick={handleClickOpen}>\r\n                            View All\r\n                            <ChevronRightOutlinedIcon />\r\n                        </Button>\r\n                    </CardActions>\r\n                </MainCard>\r\n            )}\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClickClose}\r\n                scroll={'paper'}\r\n                maxWidth={'sm'}\r\n                fullWidth={true}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">\r\n                    <Typography align=\"center\" sx={{ fontSize: '1.2rem', fontWeight: 500 }}>\r\n                        Top Emergency Brgy's\r\n                    </Typography>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n                        {loadbrgys.brgys.map((item) => (\r\n                            <div key={item.id}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {item.brgy}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            {item.numberofreport}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.success.light,\r\n                                                                color: theme.palette.success.dark,\r\n                                                                ml: 2\r\n                                                            }}\r\n                                                        >\r\n                                                            <LocalHospitalIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'success.dark' }}>\r\n                                            {item.contactnumber}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider sx={{ my: 1.5 }} />\r\n                            </div>\r\n                        ))}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nPopularCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default PopularCard;\r\n","// ===========================|| DASHBOARD - TOTAL ORDER MONTH CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    type: 'line',\r\n    height: 90,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#fff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 1\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 3\r\n        },\r\n        yaxis: {\r\n            min: 0,\r\n            max: 100\r\n        },\r\n        tooltip: {\r\n            theme: 'dark',\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: 'Total Order'\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: 'series1',\r\n            data: [45, 66, 41, 89, 25, 44, 9, 54]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default chartData;\r\n","// ===========================|| DASHBOARD - TOTAL ORDER YEAR CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    type: 'line',\r\n    height: 90,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#fff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 1\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 3\r\n        },\r\n        yaxis: {\r\n            min: 0,\r\n            max: 100\r\n        },\r\n        tooltip: {\r\n            theme: 'dark',\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: 'Total Order'\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: 'series1',\r\n            data: [35, 44, 9, 54, 45, 66, 41, 69]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default chartData;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        zIndex: 1,\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst TotalOrderLineChartCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n\r\n    const totalEmergency = useSelector((state) => state.user);\r\n\r\n    const [timeValue, setTimeValue] = useState(false);\r\n    const handleChangeTime = (event, newValue) => {\r\n        setTimeValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.primary[800],\r\n                                                color: '#fff',\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <LocalHospitalIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, true)}\r\n                                        >\r\n                                            Month\r\n                                        </Button>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={!timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, false)}\r\n                                        >\r\n                                            Year\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 0.75 }}>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                {timeValue ? (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        108\r\n                                                    </Typography>\r\n                                                ) : (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        {totalEmergency.totalE == undefined ? '0' : totalEmergency.totalE}\r\n                                                    </Typography>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Avatar\r\n                                                    sx={{\r\n                                                        ...theme.typography.smallAvatar,\r\n                                                        cursor: 'pointer',\r\n                                                        backgroundColor: theme.palette.primary[200],\r\n                                                        color: theme.palette.primary.dark\r\n                                                    }}\r\n                                                >\r\n                                                    <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                                </Avatar>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        fontSize: '1rem',\r\n                                                        fontWeight: 500,\r\n                                                        color: theme.palette.primary[200]\r\n                                                    }}\r\n                                                >\r\n                                                    Total Rescued\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalOrderLineChartCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalOrderLineChartCard;\r\n","// material-ui\r\nimport { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\r\n\r\n// ==============================|| SKELETON - TOTAL INCOME DARK/LIGHT CARD ||============================== //\r\n\r\nconst TotalIncomeCard = () => (\r\n    <Card sx={{ p: 2 }}>\r\n        <List sx={{ py: 0 }}>\r\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n                <ListItemAvatar>\r\n                    <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    sx={{ py: 0 }}\r\n                    primary={<Skeleton variant=\"rectangular\" height={20} />}\r\n                    secondary={<Skeleton variant=\"text\" />}\r\n                />\r\n            </ListItem>\r\n        </List>\r\n    </Card>\r\n);\r\n\r\nexport default TotalIncomeCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport TableChartOutlinedIcon from '@mui/icons-material/TableChartOutlined';\r\n\r\n// styles\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.primary.light,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n        borderRadius: '50%',\r\n        top: -30,\r\n        right: -180\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\r\n        borderRadius: '50%',\r\n        top: -160,\r\n        right: -130\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\r\n\r\nconst TotalIncomeDarkCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const refreshClock = () => {\r\n        setDate(new Date());\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timerId = setInterval(refreshClock, 1000);\r\n        return function cleanup() {\r\n            clearInterval(timerId);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2 }}>\r\n                        <List sx={{ py: 0 }}>\r\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        variant=\"rounded\"\r\n                                        sx={{\r\n                                            ...theme.typography.commonAvatar,\r\n                                            ...theme.typography.largeAvatar,\r\n                                            backgroundColor: theme.palette.primary[800],\r\n                                            color: '#fff'\r\n                                        }}\r\n                                    >\r\n                                        <TableChartOutlinedIcon fontSize=\"inherit\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    sx={{\r\n                                        py: 0,\r\n                                        mt: 0.45,\r\n                                        mb: 0.45\r\n                                    }}\r\n                                    primary={\r\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\r\n                                            {date.toLocaleTimeString()}\r\n                                        </Typography>\r\n                                    }\r\n                                    secondary={\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\r\n                                            Time\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalIncomeDarkCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalIncomeDarkCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\r\n\r\n// styles\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n        borderRadius: '50%',\r\n        top: -30,\r\n        right: -180\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n        borderRadius: '50%',\r\n        top: -160,\r\n        right: -130\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\r\n\r\nconst TotalIncomeLightCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const refreshClock = () => {\r\n        setDate(new Date());\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timerId = setInterval(refreshClock, 1000);\r\n        return function cleanup() {\r\n            clearInterval(timerId);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2 }}>\r\n                        <List sx={{ py: 0 }}>\r\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        variant=\"rounded\"\r\n                                        sx={{\r\n                                            ...theme.typography.commonAvatar,\r\n                                            ...theme.typography.largeAvatar,\r\n                                            backgroundColor: theme.palette.warning.light,\r\n                                            color: theme.palette.warning.dark\r\n                                        }}\r\n                                    >\r\n                                        <StorefrontTwoToneIcon fontSize=\"inherit\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    sx={{\r\n                                        py: 0,\r\n                                        mt: 0.45,\r\n                                        mb: 0.45\r\n                                    }}\r\n                                    primary={<Typography variant=\"h4\">{date.toLocaleDateString()}</Typography>}\r\n                                    secondary={\r\n                                        <Typography\r\n                                            variant=\"subtitle2\"\r\n                                            sx={{\r\n                                                color: theme.palette.grey[500],\r\n                                                mt: 0.5\r\n                                            }}\r\n                                        >\r\n                                            Date\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalIncomeLightCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalIncomeLightCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"text\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={50} width={80} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={530} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default TotalGrowthBarChart;\r\n","// ===========================|| DASHBOARD - TOTAL GROWTH BAR CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    height: 480,\r\n    type: 'bar',\r\n    options: {\r\n        chart: {\r\n            id: 'bar-chart',\r\n            stacked: true,\r\n            toolbar: {\r\n                show: true\r\n            },\r\n            zoom: {\r\n                enabled: true\r\n            }\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    legend: {\r\n                        position: 'bottom',\r\n                        offsetX: -10,\r\n                        offsetY: 0\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '50%'\r\n            }\r\n        },\r\n        xaxis: {\r\n            type: 'category',\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        },\r\n        legend: {\r\n            show: true,\r\n            fontSize: '14px',\r\n            fontFamily: `'Roboto', sans-serif`,\r\n            position: 'bottom',\r\n            offsetX: 20,\r\n            labels: {\r\n                useSeriesColors: false\r\n            },\r\n            markers: {\r\n                width: 16,\r\n                height: 16,\r\n                radius: 5\r\n            },\r\n            itemMargin: {\r\n                horizontal: 15,\r\n                vertical: 8\r\n            }\r\n        },\r\n        fill: {\r\n            type: 'solid'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        grid: {\r\n            show: true\r\n        }\r\n    },\r\n    series: []\r\n};\r\nexport default chartData;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// chart data\r\nimport chartData from './chart-data/total-growth-bar-chart';\r\n\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Today'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'This Month'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'This Year'\r\n    }\r\n];\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = ({ isLoading }) => {\r\n    const [value, setValue] = useState('today');\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n    const totalUser = useSelector((state) => state.user);\r\n    const loading = useSelector((state) => state.ui.loading);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n    const grey500 = theme.palette.grey[500];\r\n\r\n    const primary200 = theme.palette.primary[200];\r\n    const primaryDark = theme.palette.primary.dark;\r\n    const secondaryMain = theme.palette.secondary.main;\r\n    const secondaryLight = theme.palette.secondary.light;\r\n    chartData.series = totalUser.series;\r\n\r\n    useEffect(() => {\r\n        const newChartData = {\r\n            ...chartData.options,\r\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: grey200\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: grey500\r\n                }\r\n            }\r\n        };\r\n\r\n        // do not load chart when loading\r\n        if (!isLoading) {\r\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\r\n        }\r\n    }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalGrowthBarChart />\r\n            ) : (\r\n                <MainCard>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle2\">Total Rescued</Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"h3\">{totalUser.totalE}</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        id=\"standard-select-currency\"\r\n                                        select\r\n                                        value={value}\r\n                                        onChange={(e) => setValue(e.target.value)}\r\n                                    >\r\n                                        {status.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {loading ? 'loading..' : <Chart {...chartData} />}\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalGrowthBarChart.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalGrowthBarChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport EarningCard from './EarningCard';\r\nimport PopularCard from './PopularCard';\r\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\r\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\r\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\r\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <EarningCard isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <TotalOrderLineChartCard isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeDarkCard isLoading={isLoading} />\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeLightCard isLoading={isLoading} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TotalGrowthBarChart isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <PopularCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}